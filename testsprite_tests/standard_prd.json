{
  "meta": {
    "project": "GestaoTickets",
    "date": "2025-09-13",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "GestaoTickets is a comprehensive ticket management system designed to streamline the process of creating, managing, and resolving support tickets within organizations. The system supports multitenancy, allowing multiple companies to manage their tickets independently, and incorporates advanced features such as SLA management, AI-powered ticket analysis, and integration with Active Directory for authentication.",
  "core_goals": [
    "Enable efficient creation, tracking, and management of support tickets across multiple companies (tenants).",
    "Provide configurable Service Level Agreement (SLA) management to ensure timely ticket responses and resolutions based on company and department requirements.",
    "Support multi-department and role-based permissions and access controls with Active Directory integration for user authentication.",
    "Automate ticket prioritization and categorization using AI integration to improve response efficiency.",
    "Offer comprehensive reporting and analytics for ticket performance, SLA compliance, and operational insights.",
    "Ensure secure handling of attachments using AWS S3 compatible storage with metadata tracking.",
    "Provide a scheduler service to automate notifications and SLA monitoring with configurable company-specific filters to avoid duplication in multi-environment deployments.",
    "Maintain security best practices including audit trails, rate limiting, and session management for data integrity and compliance."
  ],
  "key_features": [
    "Ticket Management API supporting creation, updating, replies (including internal/external replies), and participant management.",
    "User and Authentication API integrating with Active Directory for seamless user login and role management.",
    "Comprehensive SLA Management allowing definition of priorities, response and resolution times, business hours, and pause/resume mechanics for ticket lifecycle.",
    "Department and Priority management APIs enabling department-specific priorities and configurations.",
    "AI Integration for automated ticket analysis, priority suggestion, and logging of AI interactions for transparency and tuning.",
    "Attachment Management with robust file upload and S3 storage integration, including metadata and lifecycle tracking.",
    "Reports and Analytics API offering detailed ticket reports exportable in CSV or Excel formats, plus dashboards for real-time insights.",
    "Security and Monitoring APIs for logging, audit trails, and system security monitoring.",
    "Scheduler Service to handle background jobs such as notifications with flexible filters to control the scope per environment.",
    "Email Configuration API to manage templates and email notifications linked to ticket events.",
    "Frontend features including private and public routes, usage of React Query for data caching, form validation, and user-friendly interfaces with TailwindCSS and Radix UI."
  ],
  "user_flow_summary": [
    "User authentication via login screen with Active Directory credentials, session creation, and role-based authorization.",
    "Ticket lifecycle from creation, assignment, priority and SLA determination (including AI suggested priority), responses with optional attachments, participant addition, to resolution or closure.",
    "Department and priority configuration flows via administrative interface to define SLA terms and ticket handling rules specific to company and department.",
    "AI configuration management allowing administrators to set AI providers, models, and prompts, and view analysis history.",
    "Attachment upload flow integrated within tickets, supporting file storage to S3 with metadata records and retrieval.",
    "Scheduler periodically runs to check tickets for notification triggers based on user notification settings and company filters, processing tickets without duplication across environments.",
    "Reporting flow where users can generate, filter, and export reports on tickets and performance metrics.",
    "Security and audit flows tracking changes on tickets and configurations, with logs accessible by administrators."
  ],
  "validation_criteria": [
    "User authentication must validate credentials against Active Directory and maintain secure sessions with appropriate cookie flags and rate limiting.",
    "Tickets created must store all metadata including type, priority, department, and SLA details with correct foreign key relations and default values.",
    "AI ticket analysis must produce priority suggestions that are logged with full request and response metadata for audit and retries are tracked correctly.",
    "Attachment uploads must be securely stored in configured S3 buckets with metadata accurately linked to tickets and users.",
    "Scheduler must respect the SCHEDULER_COMPANY_FILTER environment variable to avoid duplicate notifications and produce clear logs of processed companies and tickets.",
    "All APIs must validate inputs using Zod schemas and return error responses with detailed but secure error messages.",
    "SLA calculations must correctly factor business hours, pauses, and resolution states, applying department and company specific configurations dynamically.",
    "Reports and analytics should generate accurate data based on date filters, including export functionality without data loss or corruption.",
    "Security features must prevent unauthorized access, protect against common web vulnerabilities (helmet, CORS), and log audit trails comprehensively.",
    "Frontend UI must provide smooth navigation, form validations, feedback on SLA statuses and errors, and maintain data consistency using React Query caching and invalidation mechanisms."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React 18",
      "Vite",
      "Node.js",
      "Express.js",
      "PostgreSQL",
      "Drizzle ORM",
      "TailwindCSS",
      "Radix UI",
      "TanStack Query",
      "React Hook Form",
      "Zod",
      "AWS S3",
      "Nodemailer",
      "Passport.js",
      "Helmet",
      "CORS",
      "Express Rate Limit",
      "Bcrypt",
      "Puppeteer",
      "Active Directory"
    ],
    "features": [
      {
        "name": "Ticket Management API",
        "description": "Handles creation, updates, replies, and management of support tickets including attachments and participants.",
        "files": [
          "server/api/tickets/",
          "server/api/ticket-replies.ts",
          "server/routes/ticket-participants.ts",
          "shared/schema.ts",
          "shared/ticket-utils.ts",
          "server/database-storage.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Ticket Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/tickets": {
              "get": {
                "summary": "Get tickets by user role with pagination",
                "parameters": [
                  {
                    "name": "page",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  },
                  {
                    "name": "limit",
                    "in": "query",
                    "schema": {
                      "type": "integer"
                    }
                  }
                ]
              },
              "post": {
                "summary": "Create a new ticket",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "department_id": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/tickets/{id}": {
              "get": {
                "summary": "Get ticket by ID",
                "parameters": [
                  {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                      "type": "integer"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "name": "User and Authentication API",
        "description": "Manages users, authentication, and permissions with Active Directory integration.",
        "files": [
          "server/api/users/",
          "server/utils/active-directory.ts",
          "server/middleware/authorization.ts",
          "server/utils/password.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "User Authentication API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/login": {
              "post": {
                "summary": "User login",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "username": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "SLA Management API",
        "description": "Manages Service Level Agreements, priorities, and business hours calculations.",
        "files": [
          "server/api/sla-configurations.ts",
          "server/services/sla-service.ts",
          "server/api/priorities.ts",
          "server/services/priority-service.ts",
          "shared/utils/sla-calculator.ts",
          "shared/utils/sla-resolver.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "SLA Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/sla-configurations": {
              "get": {
                "summary": "Get SLA configurations"
              },
              "post": {
                "summary": "Create SLA configuration"
              }
            }
          }
        }
      },
      {
        "name": "Department Management API",
        "description": "Manages departments, officials, and department-specific configurations.",
        "files": [
          "server/api/departments/",
          "server/api/departments.ts",
          "server/api/department-priorities.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Department Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/departments": {
              "get": {
                "summary": "Get departments"
              },
              "post": {
                "summary": "Create department"
              }
            }
          }
        }
      },
      {
        "name": "AI Integration API",
        "description": "AI-powered ticket analysis, priority suggestion, and automated responses.",
        "files": [
          "server/api/ai-configurations.ts",
          "server/services/ai-service.ts",
          "client/src/pages/ai-audit.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "AI Integration API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/ai-configurations": {
              "get": {
                "summary": "Get AI configurations"
              },
              "post": {
                "summary": "Create AI configuration"
              }
            }
          }
        }
      },
      {
        "name": "Attachment Management API",
        "description": "Handles file uploads and attachments using AWS S3 storage.",
        "files": [
          "server/api/attachments/",
          "server/services/s3-service.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Attachment Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/attachments": {
              "post": {
                "summary": "Upload attachment",
                "requestBody": {
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "file": {
                            "type": "string",
                            "format": "binary"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Reports and Analytics API",
        "description": "Generates reports, statistics, and analytics for tickets and performance metrics.",
        "files": [
          "server/routes/reports.ts",
          "server/routes/dashboard.ts",
          "client/src/pages/dashboard.tsx"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Reports and Analytics API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/reports/tickets": {
              "get": {
                "summary": "Get ticket reports",
                "parameters": [
                  {
                    "name": "startDate",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  {
                    "name": "endDate",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                ]
              }
            },
            "/api/reports/tickets/export": {
              "get": {
                "summary": "Export tickets to CSV/Excel",
                "parameters": [
                  {
                    "name": "format",
                    "in": "query",
                    "schema": {
                      "type": "string",
                      "enum": [
                        "csv",
                        "excel"
                      ]
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "name": "Security and Monitoring API",
        "description": "Security monitoring, logging, and audit trail functionality.",
        "files": [
          "server/api/security-monitoring.ts",
          "server/api/logs.ts",
          "server/services/logger.ts",
          "server/middleware/security.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Security and Monitoring API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/logs": {
              "get": {
                "summary": "Get system logs"
              }
            },
            "/api/security-monitoring": {
              "get": {
                "summary": "Get security monitoring data"
              }
            }
          }
        }
      },
      {
        "name": "Scheduler Service",
        "description": "Background job scheduling for notifications, SLA monitoring, and automated tasks.",
        "files": [
          "server/services/scheduler-service.ts",
          "SCHEDULER_CONFIG.md"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Scheduler Service API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/scheduler/status": {
              "get": {
                "summary": "Get scheduler status"
              }
            }
          }
        }
      },
      {
        "name": "Email Configuration API",
        "description": "Email template management and notification configuration.",
        "files": [
          "server/services/email-config-service.ts"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Email Configuration API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/email-config": {
              "get": {
                "summary": "Get email configurations"
              },
              "post": {
                "summary": "Create email configuration"
              }
            }
          }
        }
      }
    ]
  }
}
